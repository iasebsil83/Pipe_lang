#!/usr/bin/pipe


This file is the same program as treasure.pipe.
The syntax is compressed to_ show how compact a pipe code can be,
and also_ how complex it is to_ follow the pipe in this case.

Note that I avoided the first node detection by using '_' after
words finishing by 'o'.


   /o read -p "Give an x : " x && echo $x > tempX
   vo read -p "Give an y : " y && echo $y > tempY
 /-+/
 | o echo "ERROR"
 | o exit 1
 |
 \---\
   /-o [[ $(cat tempX) == '2' ]]
   |/o [[ $(cat tempY) == '1' ]]
   ||\\
   || o echo "You found the treasure."
   \+\\-----------------------------\
    vo [[ $(cat tempX) == '4' ]]   #|
    vo [[ $(cat tempY) == '3' ]]   #|
    |\\                             |
    | o echo "You found the trap !"#|
    | \-----------------------------v
    o echo "You found nothing."    #|
   />\                              |
   | o rm tempX tempY #/------------/
   |                   |
   \-------------------/
